// CodeContracts
//
// Copyright (c) Microsoft Corporation
//
// All rights reserved.
//
// MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// File System.Windows.Controls.DataGrid.cs
// Automatically generated contract file.
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Diagnostics.Contracts;
using System;

// Disable the "this variable is not used" warning as every field would imply it.
#pragma warning disable 0414
// Disable the "this variable is never assigned to".
#pragma warning disable 0067
// Disable the "this event is never assigned to".
#pragma warning disable 0649
// Disable the "this variable is never used".
#pragma warning disable 0169
// Disable the "new keyword not required" warning.
#pragma warning disable 0109
// Disable the "extern without DllImport" warning.
#pragma warning disable 0626
// Disable the "could hide other member" warning, can happen on certain properties.
#pragma warning disable 0108


namespace System.Windows.Controls
{
  public partial class DataGrid : System.Windows.Controls.Primitives.MultiSelector
  {
    #region Methods and constructors
    public bool BeginEdit()
    {
      return default(bool);
    }

    public bool BeginEdit(System.Windows.RoutedEventArgs editingEventArgs)
    {
      return default(bool);
    }

    public bool CancelEdit()
    {
      return default(bool);
    }

    public bool CancelEdit(DataGridEditingUnit editingUnit)
    {
      return default(bool);
    }

    protected override void ClearContainerForItemOverride(System.Windows.DependencyObject element, Object item)
    {
    }

    public void ClearDetailsVisibilityForItem(Object item)
    {
    }

    public DataGridColumn ColumnFromDisplayIndex(int displayIndex)
    {
      Contract.Requires(this.Columns != null);

      return default(DataGridColumn);
    }

    public bool CommitEdit()
    {
      return default(bool);
    }

    public bool CommitEdit(DataGridEditingUnit editingUnit, bool exitEditingMode)
    {
      return default(bool);
    }

    public DataGrid()
    {
    }

    public static System.Collections.ObjectModel.Collection<DataGridColumn> GenerateColumns(System.ComponentModel.IItemProperties itemProperties)
    {
      Contract.Requires(itemProperties != null);
      Contract.Ensures(Contract.Result<System.Collections.ObjectModel.Collection<System.Windows.Controls.DataGridColumn>>() != null);

      return default(System.Collections.ObjectModel.Collection<DataGridColumn>);
    }

    protected override System.Windows.DependencyObject GetContainerForItemOverride()
    {
      return default(System.Windows.DependencyObject);
    }

    public System.Windows.Visibility GetDetailsVisibilityForItem(Object item)
    {
      return default(System.Windows.Visibility);
    }

    protected override bool IsItemItsOwnContainerOverride(Object item)
    {
      return default(bool);
    }

    protected override System.Windows.Size MeasureOverride(System.Windows.Size availableSize)
    {
      return default(System.Windows.Size);
    }

    public override void OnApplyTemplate()
    {
    }

    protected virtual new void OnAutoGeneratedColumns(EventArgs e)
    {
    }

    protected virtual new void OnAutoGeneratingColumn(DataGridAutoGeneratingColumnEventArgs e)
    {
    }

    protected virtual new void OnBeginningEdit(DataGridBeginningEditEventArgs e)
    {
    }

    protected virtual new void OnCanExecuteBeginEdit(System.Windows.Input.CanExecuteRoutedEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnCanExecuteCancelEdit(System.Windows.Input.CanExecuteRoutedEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnCanExecuteCommitEdit(System.Windows.Input.CanExecuteRoutedEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnCanExecuteCopy(System.Windows.Input.CanExecuteRoutedEventArgs args)
    {
      Contract.Requires(args != null);
    }

    protected virtual new void OnCanExecuteDelete(System.Windows.Input.CanExecuteRoutedEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnCellEditEnding(DataGridCellEditEndingEventArgs e)
    {
    }

    protected internal virtual new void OnColumnDisplayIndexChanged(DataGridColumnEventArgs e)
    {
    }

    protected internal virtual new void OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs e)
    {
    }

    protected internal virtual new void OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs e)
    {
    }

    protected internal virtual new void OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs e)
    {
    }

    protected internal virtual new void OnColumnReordered(DataGridColumnEventArgs e)
    {
    }

    protected internal virtual new void OnColumnReordering(DataGridColumnReorderingEventArgs e)
    {
    }

    protected override void OnContextMenuOpening(ContextMenuEventArgs e)
    {
    }

    protected virtual new void OnCopyingRowClipboardContent(DataGridRowClipboardEventArgs args)
    {
      Contract.Requires(args != null);
    }

    protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
    {
      return default(System.Windows.Automation.Peers.AutomationPeer);
    }

    protected virtual new void OnCurrentCellChanged(EventArgs e)
    {
    }

    protected virtual new void OnExecutedBeginEdit(System.Windows.Input.ExecutedRoutedEventArgs e)
    {
    }

    protected virtual new void OnExecutedCancelEdit(System.Windows.Input.ExecutedRoutedEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnExecutedCommitEdit(System.Windows.Input.ExecutedRoutedEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnExecutedCopy(System.Windows.Input.ExecutedRoutedEventArgs args)
    {
      Contract.Requires(args != null);
    }

    protected virtual new void OnExecutedDelete(System.Windows.Input.ExecutedRoutedEventArgs e)
    {
    }

    protected virtual new void OnInitializingNewItem(InitializingNewItemEventArgs e)
    {
    }

    protected override void OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs e)
    {
    }

    protected override void OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
    {
    }

    protected override void OnItemsSourceChanged(System.Collections.IEnumerable oldValue, System.Collections.IEnumerable newValue)
    {
    }

    protected override void OnKeyDown(System.Windows.Input.KeyEventArgs e)
    {
    }

    protected virtual new void OnLoadingRow(DataGridRowEventArgs e)
    {
      Contract.Requires(e != null);
      Contract.Requires(e.Row != null);
    }

    protected virtual new void OnLoadingRowDetails(DataGridRowDetailsEventArgs e)
    {
    }

    protected override void OnMouseMove(System.Windows.Input.MouseEventArgs e)
    {
    }

    protected internal virtual new void OnPreparingCellForEdit(DataGridPreparingCellForEditEventArgs e)
    {
    }

    protected internal virtual new void OnRowDetailsVisibilityChanged(DataGridRowDetailsEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnRowEditEnding(DataGridRowEditEndingEventArgs e)
    {
    }

    protected virtual new void OnSelectedCellsChanged(SelectedCellsChangedEventArgs e)
    {
    }

    protected override void OnSelectionChanged(SelectionChangedEventArgs e)
    {
    }

    protected virtual new void OnSorting(DataGridSortingEventArgs eventArgs)
    {
      Contract.Requires(eventArgs != null);
    }

    protected override void OnTemplateChanged(ControlTemplate oldTemplate, ControlTemplate newTemplate)
    {
    }

    protected virtual new void OnUnloadingRow(DataGridRowEventArgs e)
    {
      Contract.Requires(e != null);
    }

    protected virtual new void OnUnloadingRowDetails(DataGridRowDetailsEventArgs e)
    {
    }

    protected override void PrepareContainerForItemOverride(System.Windows.DependencyObject element, Object item)
    {
    }

    public void ScrollIntoView(Object item)
    {
    }

    public void ScrollIntoView(Object item, DataGridColumn column)
    {
    }

    public void SelectAllCells()
    {
    }

    public void SetDetailsVisibilityForItem(Object item, System.Windows.Visibility detailsVisibility)
    {
    }

    public void UnselectAllCells()
    {
    }
    #endregion

    #region Properties and indexers
    public System.Windows.Media.Brush AlternatingRowBackground
    {
      get
      {
        return default(System.Windows.Media.Brush);
      }
      set
      {
      }
    }

    public bool AreRowDetailsFrozen
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool AutoGenerateColumns
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool CanUserAddRows
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool CanUserDeleteRows
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool CanUserReorderColumns
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool CanUserResizeColumns
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool CanUserResizeRows
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool CanUserSortColumns
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public double CellsPanelHorizontalOffset
    {
      get
      {
        return default(double);
      }
      private set
      {
      }
    }

    public System.Windows.Style CellStyle
    {
      get
      {
        return default(System.Windows.Style);
      }
      set
      {
      }
    }

    public DataGridClipboardCopyMode ClipboardCopyMode
    {
      get
      {
        return default(DataGridClipboardCopyMode);
      }
      set
      {
      }
    }

    public double ColumnHeaderHeight
    {
      get
      {
        return default(double);
      }
      set
      {
      }
    }

    public System.Windows.Style ColumnHeaderStyle
    {
      get
      {
        return default(System.Windows.Style);
      }
      set
      {
      }
    }

    public System.Collections.ObjectModel.ObservableCollection<DataGridColumn> Columns
    {
      get
      {
        Contract.Ensures(Contract.Result<System.Collections.ObjectModel.ObservableCollection<DataGridColumn>>() != null);

        return default(System.Collections.ObjectModel.ObservableCollection<DataGridColumn>);
      }
    }

    public DataGridLength ColumnWidth
    {
      get
      {
        return default(DataGridLength);
      }
      set
      {
      }
    }

    public DataGridCellInfo CurrentCell
    {
      get
      {
        return default(DataGridCellInfo);
      }
      set
      {
      }
    }

    public DataGridColumn CurrentColumn
    {
      get
      {
        return default(DataGridColumn);
      }
      set
      {
      }
    }

    public Object CurrentItem
    {
      get
      {
        return default(Object);
      }
      set
      {
      }
    }

    public static System.Windows.Input.RoutedUICommand DeleteCommand
    {
      get
      {
        Contract.Ensures(Contract.Result<System.Windows.Input.RoutedUICommand>() == System.Windows.Input.ApplicationCommands.Delete);

        return default(System.Windows.Input.RoutedUICommand);
      }
    }

    public System.Windows.Style DragIndicatorStyle
    {
      get
      {
        return default(System.Windows.Style);
      }
      set
      {
      }
    }

    public System.Windows.Style DropLocationIndicatorStyle
    {
      get
      {
        return default(System.Windows.Style);
      }
      set
      {
      }
    }

    public bool EnableColumnVirtualization
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public bool EnableRowVirtualization
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public static System.Windows.ComponentResourceKey FocusBorderBrushKey
    {
      get
      {
        Contract.Ensures(Contract.Result<System.Windows.ComponentResourceKey>() != null);

        return default(System.Windows.ComponentResourceKey);
      }
    }

    public int FrozenColumnCount
    {
      get
      {
        return default(int);
      }
      set
      {
      }
    }

    public DataGridGridLinesVisibility GridLinesVisibility
    {
      get
      {
        return default(DataGridGridLinesVisibility);
      }
      set
      {
      }
    }

    internal protected override bool HandlesScrolling
    {
      get
      {
        return default(bool);
      }
    }

    public DataGridHeadersVisibility HeadersVisibility
    {
      get
      {
        return default(DataGridHeadersVisibility);
      }
      set
      {
      }
    }

    public static System.Windows.Data.IValueConverter HeadersVisibilityConverter
    {
      get
      {
        Contract.Ensures(Contract.Result<System.Windows.Data.IValueConverter>() != null);

        return default(System.Windows.Data.IValueConverter);
      }
    }

    public System.Windows.Media.Brush HorizontalGridLinesBrush
    {
      get
      {
        return default(System.Windows.Media.Brush);
      }
      set
      {
      }
    }

    public ScrollBarVisibility HorizontalScrollBarVisibility
    {
      get
      {
        return default(ScrollBarVisibility);
      }
      set
      {
      }
    }

    public bool IsReadOnly
    {
      get
      {
        return default(bool);
      }
      set
      {
      }
    }

    public double MaxColumnWidth
    {
      get
      {
        return default(double);
      }
      set
      {
      }
    }

    public double MinColumnWidth
    {
      get
      {
        return default(double);
      }
      set
      {
      }
    }

    public double MinRowHeight
    {
      get
      {
        return default(double);
      }
      set
      {
      }
    }

    public double NonFrozenColumnsViewportHorizontalOffset
    {
      get
      {
        return default(double);
      }
      internal set
      {
      }
    }

    public System.Windows.Media.Brush RowBackground
    {
      get
      {
        return default(System.Windows.Media.Brush);
      }
      set
      {
      }
    }

    public static System.Windows.Data.IValueConverter RowDetailsScrollingConverter
    {
      get
      {
        Contract.Ensures(Contract.Result<System.Windows.Data.IValueConverter>() != null);

        return default(System.Windows.Data.IValueConverter);
      }
    }

    public System.Windows.DataTemplate RowDetailsTemplate
    {
      get
      {
        return default(System.Windows.DataTemplate);
      }
      set
      {
      }
    }

    public DataTemplateSelector RowDetailsTemplateSelector
    {
      get
      {
        return default(DataTemplateSelector);
      }
      set
      {
      }
    }

    public DataGridRowDetailsVisibilityMode RowDetailsVisibilityMode
    {
      get
      {
        return default(DataGridRowDetailsVisibilityMode);
      }
      set
      {
      }
    }

    public double RowHeaderActualWidth
    {
      get
      {
        return default(double);
      }
      internal set
      {
      }
    }

    public System.Windows.Style RowHeaderStyle
    {
      get
      {
        return default(System.Windows.Style);
      }
      set
      {
      }
    }

    public System.Windows.DataTemplate RowHeaderTemplate
    {
      get
      {
        return default(System.Windows.DataTemplate);
      }
      set
      {
      }
    }

    public DataTemplateSelector RowHeaderTemplateSelector
    {
      get
      {
        return default(DataTemplateSelector);
      }
      set
      {
      }
    }

    public double RowHeaderWidth
    {
      get
      {
        return default(double);
      }
      set
      {
      }
    }

    public double RowHeight
    {
      get
      {
        return default(double);
      }
      set
      {
      }
    }

    public System.Windows.Style RowStyle
    {
      get
      {
        return default(System.Windows.Style);
      }
      set
      {
      }
    }

    public StyleSelector RowStyleSelector
    {
      get
      {
        return default(StyleSelector);
      }
      set
      {
      }
    }

    public ControlTemplate RowValidationErrorTemplate
    {
      get
      {
        return default(ControlTemplate);
      }
      set
      {
      }
    }

    public System.Collections.ObjectModel.ObservableCollection<ValidationRule> RowValidationRules
    {
      get
      {
        return default(System.Collections.ObjectModel.ObservableCollection<ValidationRule>);
      }
    }

    public static System.Windows.Input.RoutedUICommand SelectAllCommand
    {
      get
      {
        Contract.Ensures(Contract.Result<System.Windows.Input.RoutedUICommand>() == System.Windows.Input.ApplicationCommands.SelectAll);

        return default(System.Windows.Input.RoutedUICommand);
      }
    }

    public IList<DataGridCellInfo> SelectedCells
    {
      get
      {
        Contract.Ensures(Contract.Result<IList<DataGridCellInfo>>() != null);
        return default(IList<DataGridCellInfo>);
      }
    }

    public DataGridSelectionMode SelectionMode
    {
      get
      {
        return default(DataGridSelectionMode);
      }
      set
      {
      }
    }

    public DataGridSelectionUnit SelectionUnit
    {
      get
      {
        return default(DataGridSelectionUnit);
      }
      set
      {
      }
    }

    public System.Windows.Media.Brush VerticalGridLinesBrush
    {
      get
      {
        return default(System.Windows.Media.Brush);
      }
      set
      {
      }
    }

    public ScrollBarVisibility VerticalScrollBarVisibility
    {
      get
      {
        return default(ScrollBarVisibility);
      }
      set
      {
      }
    }
    #endregion

    #region Events
    public event EventHandler AutoGeneratedColumns
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridAutoGeneratingColumnEventArgs> AutoGeneratingColumn
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridBeginningEditEventArgs> BeginningEdit
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridCellEditEndingEventArgs> CellEditEnding
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridColumnEventArgs> ColumnDisplayIndexChanged
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<System.Windows.Controls.Primitives.DragCompletedEventArgs> ColumnHeaderDragCompleted
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<System.Windows.Controls.Primitives.DragDeltaEventArgs> ColumnHeaderDragDelta
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<System.Windows.Controls.Primitives.DragStartedEventArgs> ColumnHeaderDragStarted
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridColumnEventArgs> ColumnReordered
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridColumnReorderingEventArgs> ColumnReordering
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridRowClipboardEventArgs> CopyingRowClipboardContent
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<EventArgs> CurrentCellChanged
    {
      add
      {
      }
      remove
      {
      }
    }

    public event InitializingNewItemEventHandler InitializingNewItem
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridRowEventArgs> LoadingRow
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridRowDetailsEventArgs> LoadingRowDetails
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridPreparingCellForEditEventArgs> PreparingCellForEdit
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridRowDetailsEventArgs> RowDetailsVisibilityChanged
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridRowEditEndingEventArgs> RowEditEnding
    {
      add
      {
      }
      remove
      {
      }
    }

    public event SelectedCellsChangedEventHandler SelectedCellsChanged
    {
      add
      {
      }
      remove
      {
      }
    }

    public event DataGridSortingEventHandler Sorting
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridRowEventArgs> UnloadingRow
    {
      add
      {
      }
      remove
      {
      }
    }

    public event EventHandler<DataGridRowDetailsEventArgs> UnloadingRowDetails
    {
      add
      {
      }
      remove
      {
      }
    }
    #endregion

    #region Fields
    public readonly static System.Windows.DependencyProperty AlternatingRowBackgroundProperty;
    public readonly static System.Windows.DependencyProperty AreRowDetailsFrozenProperty;
    public readonly static System.Windows.DependencyProperty AutoGenerateColumnsProperty;
    public readonly static System.Windows.Input.RoutedCommand BeginEditCommand;
    public readonly static System.Windows.Input.RoutedCommand CancelEditCommand;
    public readonly static System.Windows.DependencyProperty CanUserAddRowsProperty;
    public readonly static System.Windows.DependencyProperty CanUserDeleteRowsProperty;
    public readonly static System.Windows.DependencyProperty CanUserReorderColumnsProperty;
    public readonly static System.Windows.DependencyProperty CanUserResizeColumnsProperty;
    public readonly static System.Windows.DependencyProperty CanUserResizeRowsProperty;
    public readonly static System.Windows.DependencyProperty CanUserSortColumnsProperty;
    public readonly static System.Windows.DependencyProperty CellsPanelHorizontalOffsetProperty;
    public readonly static System.Windows.DependencyProperty CellStyleProperty;
    public readonly static System.Windows.DependencyProperty ClipboardCopyModeProperty;
    public readonly static System.Windows.DependencyProperty ColumnHeaderHeightProperty;
    public readonly static System.Windows.DependencyProperty ColumnHeaderStyleProperty;
    public readonly static System.Windows.DependencyProperty ColumnWidthProperty;
    public readonly static System.Windows.Input.RoutedCommand CommitEditCommand;
    public readonly static System.Windows.DependencyProperty CurrentCellProperty;
    public readonly static System.Windows.DependencyProperty CurrentColumnProperty;
    public readonly static System.Windows.DependencyProperty CurrentItemProperty;
    public readonly static System.Windows.DependencyProperty DragIndicatorStyleProperty;
    public readonly static System.Windows.DependencyProperty DropLocationIndicatorStyleProperty;
    public readonly static System.Windows.DependencyProperty EnableColumnVirtualizationProperty;
    public readonly static System.Windows.DependencyProperty EnableRowVirtualizationProperty;
    public readonly static System.Windows.DependencyProperty FrozenColumnCountProperty;
    public readonly static System.Windows.DependencyProperty GridLinesVisibilityProperty;
    public readonly static System.Windows.DependencyProperty HeadersVisibilityProperty;
    public readonly static System.Windows.DependencyProperty HorizontalGridLinesBrushProperty;
    public readonly static System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;
    public readonly static System.Windows.DependencyProperty IsReadOnlyProperty;
    public readonly static System.Windows.DependencyProperty MaxColumnWidthProperty;
    public readonly static System.Windows.DependencyProperty MinColumnWidthProperty;
    public readonly static System.Windows.DependencyProperty MinRowHeightProperty;
    public readonly static System.Windows.DependencyProperty NonFrozenColumnsViewportHorizontalOffsetProperty;
    public readonly static System.Windows.DependencyProperty RowBackgroundProperty;
    public readonly static System.Windows.DependencyProperty RowDetailsTemplateProperty;
    public readonly static System.Windows.DependencyProperty RowDetailsTemplateSelectorProperty;
    public readonly static System.Windows.DependencyProperty RowDetailsVisibilityModeProperty;
    public readonly static System.Windows.DependencyProperty RowHeaderActualWidthProperty;
    public readonly static System.Windows.DependencyProperty RowHeaderStyleProperty;
    public readonly static System.Windows.DependencyProperty RowHeaderTemplateProperty;
    public readonly static System.Windows.DependencyProperty RowHeaderTemplateSelectorProperty;
    public readonly static System.Windows.DependencyProperty RowHeaderWidthProperty;
    public readonly static System.Windows.DependencyProperty RowHeightProperty;
    public readonly static System.Windows.DependencyProperty RowStyleProperty;
    public readonly static System.Windows.DependencyProperty RowStyleSelectorProperty;
    public readonly static System.Windows.DependencyProperty RowValidationErrorTemplateProperty;
    public readonly static System.Windows.DependencyProperty SelectionModeProperty;
    public readonly static System.Windows.DependencyProperty SelectionUnitProperty;
    public readonly static System.Windows.DependencyProperty VerticalGridLinesBrushProperty;
    public readonly static System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;
    #endregion
  }
}
